# ---- Builder Stage ----
# Use an alias "builder" for this stage
FROM python:3.11-slim AS builder

WORKDIR /app

# Install build-time system dependencies (if any are needed for dashboard dependencies)
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements file
COPY requirements.txt .

# Create and activate virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python dependencies
# Ensure streamlit, pandas, plotly are in requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# ---- Final Stage ----
FROM python:3.11-slim

WORKDIR /app

# Copy virtual environment from builder stage
COPY --from=builder /opt/venv /opt/venv

# Copy application code
COPY dashboard.py .
# If you have other dashboard-specific files (e.g., static assets, other .py files), copy them too.
# e.g., COPY static/ static/

# Add venv to PATH in the final image
ENV PATH="/opt/venv/bin:$PATH"

# Environment variables like PYTHONUNBUFFERED and TZ are typically set in docker-compose.yml
# EXPOSE 8501 # Port exposure is handled by docker-compose.yml


# Expose Streamlit port
EXPOSE 8501

# Set Streamlit configurations
ENV STREAMLIT_SERVER_PORT=8501
ENV STREAMLIT_SERVER_ADDRESS=0.0.0.0
# Add a command to run Streamlit (assuming dashboard.py is the target)
CMD ["streamlit", "run", "dashboard.py"]